"
" LOCAL SETTINGS
"
set isfname+={,}      " This will allow vim to understand env vars with curly braces that are used in bootenv.modulefile
set isfname-==


function! s:SetLocalSettings(filename)
  if ($STEM == "")
    return
  endif

  set path=.
  set path+=$STEM/build/latest/generated/**
  set path+=$STEM/build/latest/fake_c_incl
  set path+=$STEM/ch/**
  set path+=$STEM/import/avf/**
  set path+=/usr/local/include,/usr/include
  set path+=**;

  if (a:filename =~ '\v/ch/verif/l3/arch_l3')
    return
  endif
  if (a:filename =~ '/ch/rtl') && (a:filename !~ 'txl$') && (a:filename !~ 'l3s_ctl_attach')
    setlocal textwidth=80
    setlocal softtabstop=3
    setlocal shiftwidth=3
  elseif (a:filename =~ '\v/ch/verif/(chk_)?l3/|\v/ch/tc/tb_l3')
    setlocal colorcolumn+=101
    let b:OrigamiFoldAtCol=96
  endif

  let l:ext=fnamemodify(a:filename, ':r')
  if (l:ext == "txl" || l:ext == "rdl" || l:ext == "xdl")
    execute "set filetype=ruby." . l:ext
  endif

  let g:ale_cpp_clang_options = get(g:, 'ale_cpp_clang_options', "")
  if ($BOOST_HOME != "")
    let g:ale_cpp_clang_options .= " -I ${BOOST_HOME}/include"
  endif
  if ($GCC_HOME != "")
    let g:ale_cpp_clang_options .= " -I ${GCC_HOME}/include"
  endif
  let g:ale_cpp_clang_options .= " -I $STEM/build/latest/fake_c_incl"
endfunction

function! s:SetLocalSettingsCpp(filename)
  if ($STEM == "")
    return
  endif

  setl formatprg=clang-format\ -style=file

  if (a:filename =~ '\v_if\.h')
    let b:fswitchnames='/_if$//'
  endif
  if (a:filename =~ '\v_provider\.cc')
    let b:fswitchnames='/_provider$//'
  endif
endfunction


augroup AMD
  autocmd!
  autocmd BufNewFile,BufRead *   call s:SetLocalSettings(expand('<afile>:p'))
  autocmd FileType           cpp call s:SetLocalSettingsCpp(expand('<afile>:p'))
augroup END


"" Fat finger forgiveness
abbrev resposne response
abbrev Resposne Response


"" Project-specific config
if filereadable(expand("$PROJ_HOME/.vimrc"))
  source $PROJ_HOME/.vimrc
endif
